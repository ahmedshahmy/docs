#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Dec 01, 2020 11:07:26 AM +0530  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

#import renal1_support

import pyrebase
import matplotlib.pyplot as plt

from datetime import datetime
import numpy as np

firebasConfig={
    'apiKey': "AIzaSyAyOKsYNnwrxwgmMy-7qQsT7QiYIcWF3-I",
    'authDomain': "renal-1e0ac.firebaseapp.com",
    'databaseURL': "https://renal-1e0ac.firebaseio.com",
    'projectId': "renal-1e0ac",
    'storageBucket': "renal-1e0ac.appspot.com",
    'messagingSenderId': "39709818947",
    'appId': "1:39709818947:web:8998d016a6d9e4ffa854f6",
    'measurementId': "G-1R80GQM1G8"
}

firebase=pyrebase.initialize_app(firebasConfig)
db=firebase.database()

global x
global y
x=[]
y=[]
global x1
global y1
x1=[]
y1=[]

def init(top, gui, *args, **kwargs):
    global w, top_level, root
    w = gui
    top_level = top
    root = top

def add(name,date,creat):
    data={"name":name,"date":date,"Creatinine":creat}
    db.child("patients").push(data)
    print('renal1_support.add')
    sys.stdout.flush()

def graph(name):
    patients=db.child("patients").order_by_child("name").equal_to(name).get()

    for p in patients.each():
    
    
    #print(p.val()["date"])
        y.append(float(p.val()["Creatinine"]))
        x.append(datetime.strptime(p.val()["date"],'%Y%m%d'))
   


    
    plt.scatter(x, y)
    print(x,y)
    plt.yticks(y)

   
    
    #plt.plot(x,y)
    plt.yscale('log')
    plt.gca().invert_yaxis()
    plt.xticks(x)
    plt.yticks(y)

    plt.xlabel("date")
    plt.ylabel("S.Cr")
    mng = plt.get_current_fig_manager()
    mng.resize(1000,1000)
    plt.axhline(y=500,color='red', label='500, prepare for RRT')
    plt.legend()
    
    #plt.yticks([100,200,300,400,500,600,700,800,900,1000])
    plt.show()

    print('renal1_support.graph')
    sys.stdout.flush()

def destroy_window():
    # Function which closes the window.
    global top_level
    top_level.destroy()
    top_level = None

if __name__ == '__main__':
    #import renal1
    #renal1.vp_start_gui()
    #vp_start_gui()
    i=0








w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    #renal1_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("623x450+542+205")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("CKD progression ")

        self.Entryname = tk.Entry(top)
        self.Entryname.place(relx=0.316, rely=0.2, height=33, relwidth=0.266)
        self.Entryname.configure(background="white")
        self.Entryname.configure(font="TkFixedFont")

        self.Labeldate = tk.Label(top)
        self.Labeldate.place(relx=0.05, rely=0.422, height=21, width=134)
        self.Labeldate.configure(text='''Date(YYYYMMDD)''')

        self.Labelname = tk.Label(top)
        self.Labelname.place(relx=0.183, rely=0.222, height=21, width=41)
        self.Labelname.configure(text='''Name''')

        self.Entrydate = tk.Entry(top)
        self.Entrydate.place(relx=0.316, rely=0.422, height=33, relwidth=0.266)
        self.Entrydate.configure(background="white")
        self.Entrydate.configure(font="TkFixedFont")

        self.Labelcreat = tk.Label(top)
        self.Labelcreat.place(relx=0.133, rely=0.667, height=21, width=82)
        self.Labelcreat.configure(text='''Creatinine''')

        self.Entrycreat = tk.Entry(top)
        self.Entrycreat.place(relx=0.316, rely=0.644, height=33, relwidth=0.266)
        self.Entrycreat.configure(background="white")
        self.Entrycreat.configure(font="TkFixedFont")

        self.Buttonadd = tk.Button(top)
        self.Buttonadd.place(relx=0.1, rely=0.867, height=31, width=131)
        self.Buttonadd.configure(command=add(self.Entryname.get(),self.Entrydate.get(),self.Entrycreat.get()))
        self.Buttonadd.configure(text='''Add to Database''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Buttongraph = tk.Button(top)
        self.Buttongraph.place(relx=0.483, rely=0.867, height=31, width=121)
        self.Buttongraph.configure(command=graph(self.Entryname.get()))
        self.Buttongraph.configure(text='''See Graph''')






